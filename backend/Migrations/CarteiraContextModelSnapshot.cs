// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

namespace backend.Migrations
{
    [DbContext(typeof(CarteiraContext))]
    partial class CarteiraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sigla");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("backend.Models.Corretora", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PaisId");

                    b.ToTable("Corretora");
                });

            modelBuilder.Entity("backend.Models.Operacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("corretoraid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataOperacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataOperacao");

                    b.Property<int?>("papelid")
                        .HasColumnType("int");

                    b.Property<decimal>("quantidade")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("quantidade");

                    b.Property<int?>("tipoOperacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("int");

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorTotal");

                    b.Property<decimal>("valorUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorUnitario");

                    b.HasKey("Id");

                    b.HasIndex("corretoraid");

                    b.HasIndex("papelid");

                    b.HasIndex("tipoOperacaoId");

                    b.HasIndex("usuarioid");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity("backend.Models.Pais", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.HasKey("id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("backend.Models.Papel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sigla");

                    b.HasKey("id");

                    b.ToTable("Papel");
                });

            modelBuilder.Entity("backend.Models.TipoOperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sigla");

                    b.HasKey("Id");

                    b.ToTable("TipoOperacao");
                });

            modelBuilder.Entity("backend.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("backend.Models.Corretora", b =>
                {
                    b.HasOne("backend.Models.Pais", "Pais")
                        .WithMany("Corretora")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("backend.Models.Operacao", b =>
                {
                    b.HasOne("backend.Models.Corretora", "corretora")
                        .WithMany()
                        .HasForeignKey("corretoraid");

                    b.HasOne("backend.Models.Papel", "papel")
                        .WithMany()
                        .HasForeignKey("papelid");

                    b.HasOne("backend.Models.TipoOperacao", "tipoOperacao")
                        .WithMany()
                        .HasForeignKey("tipoOperacaoId");

                    b.HasOne("backend.Models.Usuario", "usuario")
                        .WithMany("Operacoes")
                        .HasForeignKey("usuarioid");

                    b.Navigation("corretora");

                    b.Navigation("papel");

                    b.Navigation("tipoOperacao");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("backend.Models.Pais", b =>
                {
                    b.Navigation("Corretora");
                });

            modelBuilder.Entity("backend.Models.Usuario", b =>
                {
                    b.Navigation("Operacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
